---
description: UI/UX Review Checklist for Bootstrap 2.2.2 and Razor Views
reviewType: ui
---

# UI/UX Review Rules

This file provides specific criteria for reviewing user interface code against established UI/UX patterns. Reference: `@.cursor/rules:C-ui_patterns.mdc`.

## Review Checklist

### 1. Bootstrap 2.2.2 Compliance

**What to Check:**
- [ ] Uses Bootstrap 2.2.2 grid system (`row-fluid`, `span*`)
- [ ] No Bootstrap 3+ or 4+ classes (e.g., `col-md-6`, `container-fluid`)
- [ ] Consistent use of Bootstrap button classes (`btn`, `btn-primary`, `btn-danger`)
- [ ] Proper Bootstrap icon classes (`icon-*`, not `glyphicon-*`)
- [ ] Responsive layout using `span*` classes that sum to 12

**Common Violations:**
- Mixing Bootstrap versions
- Using inline styles instead of Bootstrap classes
- Grid columns not summing to 12
- Missing `row-fluid` wrapper for columns
- Using hardcoded pixel widths instead of grid system

**Severity**: Medium (affects consistency and responsiveness)

**Examples:**
```html
<!-- ❌ BAD: Wrong Bootstrap version -->
<div class="container">
    <div class="row">
        <div class="col-md-6">Content</div> <!-- Bootstrap 3 class! -->
    </div>
</div>

<!-- ✅ GOOD: Bootstrap 2.2.2 -->
<div class="container-fluid">
    <div class="row-fluid">
        <div class="span6">Content</div>
    </div>
</div>

<!-- ❌ BAD: Inline styles -->
<div style="width: 50%; float: left;">Content</div>

<!-- ✅ GOOD: Bootstrap grid -->
<div class="span6">Content</div>
```

---

### 2. Accessibility (A11y)

**What to Check:**
- [ ] All form inputs have associated `<label>` elements
- [ ] Required fields marked with `*` and `aria-required="true"`
- [ ] Buttons have descriptive text or `aria-label`
- [ ] Icons use `aria-hidden="true"` when decorative
- [ ] Modal dialogs have `role="dialog"` and proper ARIA attributes
- [ ] Tables have proper `<thead>` and `<th>` structure
- [ ] Color is not the only means of conveying information
- [ ] Focus indicators are visible

**Common Violations:**
- Form inputs without labels
- Buttons with only icons (no text or aria-label)
- Missing alt text on informational images
- Modals without ARIA attributes
- Poor color contrast
- No keyboard navigation support

**Severity**: High (legal requirement, usability issue)

**Examples:**
```html
<!-- ❌ BAD: No label, no ARIA -->
<input type="text" name="Nome" placeholder="Nome" />

<!-- ✅ GOOD: Proper label and ARIA -->
<label for="Nome" class="control-label">Nome *</label>
<input type="text" id="Nome" name="Nome" class="span10" 
       aria-required="true" placeholder="Digite o nome completo" />

<!-- ❌ BAD: Icon-only button -->
<button type="button" class="btn">
    <i class="icon-trash"></i>
</button>

<!-- ✅ GOOD: Button with text or ARIA label -->
<button type="button" class="btn btn-danger" aria-label="Excluir registro">
    <i class="icon-white icon-trash" aria-hidden="true"></i> Excluir
</button>

<!-- ❌ BAD: Status by color only -->
<span style="color: green;">Ativo</span>

<!-- ✅ GOOD: Status with label -->
<span class="label label-success">Ativo</span>
```

---

### 3. Form Usability

**What to Check:**
- [ ] Form has clear submit and cancel actions
- [ ] Required fields clearly marked with `*`
- [ ] Validation messages displayed near the field
- [ ] Success/error messages displayed after submission
- [ ] Placeholders provide helpful hints
- [ ] Input masks applied to formatted fields (CPF, CNPJ, dates)
- [ ] Logical tab order maintained
- [ ] Submit button disabled during AJAX submission

**Common Violations:**
- No visual indication of required fields
- Generic error messages at top of form only
- Missing placeholders or unhelpful placeholders
- No input masks for formatted data
- Multiple submit buttons without clear primary action
- Form can be submitted multiple times

**Severity**: Medium (user experience issue)

**Examples:**
```html
<!-- ❌ BAD: No required indicator, no validation display -->
<label for="CPF">CPF</label>
<input type="text" id="CPF" name="CPF" />

<!-- ✅ GOOD: Clear required field with validation -->
<label for="CPF" class="control-label">CPF *</label>
<input type="text" id="CPF" name="CPF" class="span11" 
       placeholder="000.000.000-00" aria-required="true" />
@Html.ValidationMessageFor(model => model.CPF, "", new { @class = "help-inline text-error" })

<!-- ❌ BAD: No clear primary action -->
<button type="submit">Salvar</button>
<button type="button">Cancelar</button>
<button type="button">Limpar</button>

<!-- ✅ GOOD: Clear primary and secondary actions -->
<div class="form-actions">
    <button type="submit" class="btn btn-primary">
        <i class="icon-white icon-ok"></i> Salvar
    </button>
    @Html.ActionLink("Cancelar", "Index", null, new { @class = "btn" })
    <button type="reset" class="btn">
        <i class="icon-refresh"></i> Limpar
    </button>
</div>
```

---

### 4. Consistent Messaging

**What to Check:**
- [ ] Success messages use `alert-success` class
- [ ] Error messages use `alert-error` class
- [ ] Warning messages use `alert-block` or `alert-warning` class
- [ ] Messages are dismissible with close button
- [ ] Messages use appropriate icons
- [ ] TempData used for post-redirect messages
- [ ] Validation summary displayed for form errors

**Common Violations:**
- Inconsistent alert styling
- Missing close buttons on dismissible alerts
- No icons in messages
- Client-side alerts (`alert()`) instead of styled messages
- Validation errors not displayed

**Severity**: Low (consistency issue)

**Examples:**
```html
<!-- ❌ BAD: Inconsistent styling, no close button -->
<div style="background: green; color: white;">Salvo com sucesso!</div>

<!-- ✅ GOOD: Bootstrap alert with dismiss -->
@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissable">
        <button type="button" class="close" data-dismiss="alert">&times;</button>
        <i class="icon-ok"></i> @TempData["Success"]
    </div>
}

<!-- ❌ BAD: JavaScript alert -->
<script>alert('Erro ao salvar!');</script>

<!-- ✅ GOOD: Styled alert message -->
@if (TempData["Error"] != null)
{
    <div class="alert alert-error alert-dismissable">
        <button type="button" class="close" data-dismiss="alert">&times;</button>
        <i class="icon-warning-sign"></i> @TempData["Error"]
    </div>
}
```

---

### 5. Table Usability

**What to Check:**
- [ ] Tables use `table`, `table-striped`, `table-bordered`, `table-hover` classes
- [ ] Proper `<thead>` with `<th>` for column headers
- [ ] Action columns have fixed width
- [ ] Empty state message when no data
- [ ] Pagination for large datasets
- [ ] Sortable columns indicated visually
- [ ] Responsive handling (horizontal scroll on small screens)

**Common Violations:**
- Plain `<table>` without Bootstrap classes
- Missing table headers
- No empty state handling
- Large datasets without pagination
- Action buttons inconsistent across rows
- Tables breaking layout on mobile

**Severity**: Medium (usability and accessibility)

**Examples:**
```html
<!-- ❌ BAD: Plain table, no structure -->
<table>
    <tr><td>Nome</td><td>CPF</td></tr>
    <tr><td>João</td><td>123.456.789-00</td></tr>
</table>

<!-- ✅ GOOD: Properly structured Bootstrap table -->
<table class="table table-striped table-bordered table-hover">
    <thead>
        <tr>
            <th>Nome</th>
            <th>CPF</th>
            <th>Situação</th>
            <th width="120">Ações</th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Items.Any())
        {
            @foreach (var item in Model.Items)
            {
                <tr>
                    <td>@item.Nome</td>
                    <td>@Html.DisplayFor(modelItem => item.CPF)</td>
                    <td>
                        <span class="label @(item.Ativo ? "label-success" : "label-important")">
                            @(item.Ativo ? "Ativo" : "Inativo")
                        </span>
                    </td>
                    <td>
                        @Html.ActionLink("Editar", "Edit", new { id = item.Id }, 
                            new { @class = "btn btn-mini" })
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="4" class="text-center">
                    <em>Nenhum registro encontrado.</em>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Pagination -->
@if (Model.TotalPages > 1)
{
    <div class="pagination pagination-centered">
        <!-- Pagination markup -->
    </div>
}
```

---

### 6. Modal Dialog Patterns

**What to Check:**
- [ ] Modals use proper Bootstrap 2.2.2 structure
- [ ] Modal has `tabindex="-1"` and `role="dialog"`
- [ ] Modal header includes close button
- [ ] Clear modal title in header
- [ ] Primary action clearly distinguished in footer
- [ ] Modal properly initialized with JavaScript
- [ ] Backdrop and keyboard escape enabled

**Common Violations:**
- Missing ARIA attributes
- No close button in header
- Unclear or missing modal title
- Actions not clearly distinguished
- Modal not properly closed after action
- Missing backdrop or keyboard dismiss

**Severity**: Medium (usability and accessibility)

**Examples:**
```html
<!-- ❌ BAD: Incomplete modal structure -->
<div id="myModal" class="modal">
    <p>Confirma?</p>
    <button onclick="confirmar()">Sim</button>
</div>

<!-- ✅ GOOD: Proper Bootstrap 2.2.2 modal -->
<div id="modalConfirmacao" class="modal hide fade" tabindex="-1" 
     role="dialog" aria-labelledby="modalTitle" aria-hidden="true">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" 
                aria-hidden="true">&times;</button>
        <h4 id="modalTitle" class="modal-title">Confirmação de Exclusão</h4>
    </div>
    <div class="modal-body">
        <p>Tem certeza que deseja excluir este registro? Esta ação não pode ser desfeita.</p>
    </div>
    <div class="modal-footer">
        <button type="button" class="btn" data-dismiss="modal">Cancelar</button>
        <button type="button" class="btn btn-danger" onclick="confirmarExclusao()">
            <i class="icon-white icon-trash"></i> Excluir
        </button>
    </div>
</div>

<script>
// Properly show modal
$('#modalConfirmacao').modal('show');
</script>
```

---

### 7. Responsive Design

**What to Check:**
- [ ] Layout uses `container-fluid` for full-width
- [ ] Grid columns use `span*` classes that sum to 12
- [ ] Multiple `row-fluid` for stacking content
- [ ] Viewport meta tag in layout
- [ ] Tables scrollable on small screens
- [ ] Navigation collapses on mobile (navbar-toggle)
- [ ] Forms stack vertically on mobile

**Common Violations:**
- Fixed pixel widths breaking mobile layout
- Missing viewport meta tag
- Tables not scrollable on mobile
- Navigation not responsive
- Forms not optimized for touch

**Severity**: High (mobile usability)

**Examples:**
```html
<!-- ❌ BAD: Fixed widths -->
<div style="width: 800px;">
    <div style="width: 400px; float: left;">Column 1</div>
    <div style="width: 400px; float: left;">Column 2</div>
</div>

<!-- ✅ GOOD: Responsive grid -->
<div class="container-fluid">
    <div class="row-fluid">
        <div class="span6">Column 1</div>
        <div class="span6">Column 2</div>
    </div>
</div>

<!-- ❌ BAD: Missing viewport -->
<head>
    <title>Page</title>
</head>

<!-- ✅ GOOD: With viewport -->
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Page</title>
</head>
```

---

### 8. Loading States and Feedback

**What to Check:**
- [ ] Loading indicators shown during AJAX operations
- [ ] Submit buttons disabled during submission
- [ ] Progress indicators for long operations
- [ ] Visual feedback on user actions (hover, active states)
- [ ] Confirmation dialogs for destructive actions
- [ ] Success feedback after actions complete

**Common Violations:**
- No loading indicator during AJAX
- Forms can be submitted multiple times
- No feedback on button clicks
- Destructive actions without confirmation
- No success message after save

**Severity**: Medium (user experience)

**Examples:**
```javascript
// ❌ BAD: No loading state
function salvar() {
    $.ajax({
        url: '/Contribuinte/Save',
        data: formData,
        success: function() {
            alert('Salvo!');
        }
    });
}

// ✅ GOOD: Loading state and feedback
function salvar() {
    var $btn = $('#btnSalvar');
    $btn.prop('disabled', true).html('<i class="icon-refresh icon-spin"></i> Salvando...');
    $('#loading').show();
    
    $.ajax({
        url: '/Contribuinte/Save',
        data: formData,
        success: function() {
            mostrarMensagem('Registro salvo com sucesso!', 'success');
            setTimeout(function() {
                window.location = '@Url.Action("Index")';
            }, 1500);
        },
        error: function() {
            mostrarMensagem('Erro ao salvar registro.', 'error');
        },
        complete: function() {
            $btn.prop('disabled', false).html('<i class="icon-ok"></i> Salvar');
            $('#loading').hide();
        }
    });
}
```

---

## Context: Dívida Ativa System UI

### Technology Stack
- **Bootstrap**: 2.2.2 (NOT 3.x or 4.x)
- **jQuery**: 1.10.2+
- **View Engine**: Razor (.cshtml)
- **Grid System**: `row-fluid` + `span*` (sums to 12)
- **Icons**: Bootstrap icon classes (`icon-*`)

### Common UI Components
- **box-sgi**: Custom container component for content sections
- **form-actions**: Standard container for form buttons
- **table-striped table-bordered table-hover**: Standard table styling
- **btn btn-primary**: Primary action buttons
- **alert alert-success/error**: Message styling

### UI Priorities

**Critical Issues:**
- Bootstrap version mismatch
- Missing accessibility attributes
- Broken responsive layout
- Forms without validation

**High Priority:**
- Inconsistent messaging
- Poor table usability
- Missing loading states
- Modal accessibility

**Medium Priority:**
- Inconsistent button styling
- Missing placeholders
- Poor empty states
- Icon usage

**Low Priority:**
- Minor spacing issues
- Icon choices
- Color tweaks

---

## Review Output Template

When reviewing UI code, structure findings as:

```
#### [UI Principle] Issue in {ViewName} - [Severity]
**Line(s)**: {line numbers}
**Issue**: {what UI/UX problem exists}
**Impact**: {how this affects users or accessibility}
**Suggested Fix**: 
- {specific UI improvement}
- {code example with proper Bootstrap 2.2.2 markup}
**Reference**: {link to C-ui_patterns.mdc section if applicable}
```

---

## Additional Resources

- **Bootstrap 2.2.2 Docs**: http://getbootstrap.com/2.2.2/
- **WCAG 2.1**: https://www.w3.org/WAI/WCAG21/quickref/
- **Pattern Reference**: `@.cursor/rules:C-ui_patterns.mdc`

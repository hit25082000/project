---
description: Naming conventions for files, classes, selectors, and variables
alwaysApply: false
---

# Naming Conventions

Consistent naming conventions across the entire codebase to maintain readability and developer experience.

## File Naming

### General Pattern
Use `kebab-case` with the format `feature.type.ts`

### Specific Types
- **Components**: `[feature]-[type].component.ts`
  - `establishment-card.component.ts`
  - `user-profile.page.ts`
  - `loading-spinner.component.ts`
- **Services**: `[feature].service.ts`
  - `establishment.service.ts`
  - `notification.service.ts`
- **APIs**: `[feature].api.ts`
  - `establishment.api.ts`
  - `user.api.ts`
- **Models**: `[feature].model.ts`
  - `establishment.model.ts`
  - `user.model.ts`
- **Constants**: `[feature]-[purpose].constant.ts`
  - `establishment-form.constant.ts`
  - `user-validation.constant.ts`
- **Enums**: `[feature].enum.ts`
  - `establishment.enum.ts`
  - `user.enum.ts`
- **Routes**: `[feature].routes.ts`
  - `establishment.routes.ts`
  - `user.routes.ts`

## Class Naming

### PascalCase for Classes
- **Services**: `[Feature]Service`
  - `EstablishmentService`
  - `UserService`
- **APIs**: `[Feature]Api`
  - `EstablishmentApi`
  - `UserApi`
- **Components**: `[Feature][Type]Component`
  - `EstablishmentCardComponent`
  - `UserProfilePage`
- **Models/Interfaces**: `i[Feature]`
  - `iEstablishment`
  - `iUser`
- **Enums**: `e[Feature][Property]`
  - `eEstablishmentCategory`
  - `eUserRole`

## Selector Naming

### Component Selectors
- **Page selectors**: `app-[feature]-[action]`
  - `<app-establishment-details>`
  - `<app-user-profile>`
- **Reusable component selectors**: `v-[feature]-[type]`
  - `<v-establishment-card>`
  - `<v-loading-spinner>`
  - `<v-user-avatar>`

## Variable and Property Naming

### camelCase for Variables
- **Properties**: `camelCase`
  - `selectedEstablishment`
  - `isLoading`
  - `userProfile`
- **Methods**: `camelCase`
  - `getEstablishmentById()`
  - `updateUserProfile()`
  - `handleFormSubmit()`

### Signal Naming
- **Readable signals**: `[property]` (noun)
  - `establishments`
  - `selectedItem`
  - `isLoading`
- **Writable signals**: `[property]` (noun)
  - `selectedId`
  - `searchTerm`

## Constants and Configuration

### SCREAMING_SNAKE_CASE for Constants
- **Configuration constants**: `[FEATURE]_[PURPOSE]_CONFIG`
  - `ESTABLISHMENT_FORM_CONFIG`
  - `USER_VALIDATION_RULES`
- **Enum values**: `SCREAMING_SNAKE_CASE`
  - `eEstablishmentCategory.RESTAURANT`
  - `eUserRole.ADMIN`



## Database and API Naming

### Database Tables
- **Singular, snake_case**
  - `establishment`
  - `user_profile`
  - `business_hours`

### API Endpoints
- **RESTful, kebab-case**
  - `/api/establishments`
  - `/api/user-profiles`
  - `/api/business-hours`

## CSS and Styling

### CSS Classes
- **BEM methodology**: `block__element--modifier`
  - `.establishment-card`
  - `.establishment-card__title`
  - `.establishment-card__title--highlighted`

### SCSS Variables
- **kebab-case with $ prefix**
  - `$primary-color`
  - `$border-radius-sm`
  - `$spacing-lg`

## TypeScript Types

### Interface Prefixes
- **Base interfaces**: `i[Feature]`
  - `iEstablishment`
  - `iUser`
- **Type variations**: `i[Feature][Purpose]`
  - `iEstablishmentPreview`
  - `iEstablishmentCreate`
  - `iUserProfile`

### Generic Types
- **Utility types**: `i[Purpose]<T>`
  - `iApiResponse<T>`
  - `iFormData<T>`
  - `iPaginatedResponse<T>`

## Error and Exception Naming

### Error Classes
- **PascalCase with Error suffix**
  - `ApiError`
  - `ValidationError`
  - `NotFoundError`

### Error Codes
- **SCREAMING_SNAKE_CASE**
  - `VALIDATION_ERROR`
  - `NOT_FOUND`
  - `UNAUTHORIZED`